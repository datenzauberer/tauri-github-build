name: publish

on:
  push:
    branches:
      - main
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
#        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
    runs-on: ${{ matrix.os }}

    steps:
      - name: Show the input string and matrix
        run: |
          echo "The raw input string is: ${{ inputs.platforms }}"
          echo "The matrix os value is: ${{ matrix.os }}"
          
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Show runner OS
        run: echo "Building on ${{ runner.os }}"

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.13.1
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          # Use the correct runner label to conditionally install aarch64 target
          targets: ${{ contains(matrix.os, 'macos') && 'aarch64-apple-darwin' || '' }}

      - name: Install Linux dependencies (Ubuntu only)
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and publish with Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false